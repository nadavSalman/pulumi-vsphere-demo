---
- name: Save hostname
  set_fact:
    hostname: "{{ ansible_hostname }}"

- name: Output saved hostname
  debug:
    msg: "Saved hostname is {{ hostname }}"

- name: Forwarding IPv4 and letting iptables see bridged traffic
  shell: |
    cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
    overlay
    br_netfilter
    EOF

    sudo modprobe overlay
    sudo modprobe br_netfilter

    # sysctl params required by setup, params persist across reboots
    cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    EOF

    # Apply sysctl params without reboot
    sudo sysctl --system

- name: Install containerd
  apt:
    name: containerd
    state: latest
    update_cache: yes

- name: Create /etc/containerd directory
  file:
    path: /etc/containerd
    state: directory
    mode: 0755


- name: Create containerd config file
  copy:
    dest: /etc/containerd/config.toml
    content: |
      [plugins]
        [plugins.cri.containerd]
          snapshotter = "overlayfs"
          [plugins.cri.containerd.default_runtime]
            runtime_type = "io.containerd.runtime.v1.linux"
            runtime_engine = "/usr/local/bin/runc"
            runtime_root = ""
- name: Start and enable containerd service
  service:
    name: containerd
    state: started
    enabled: yes

- name: Output status of containerd service
  shell: systemctl is-active --quiet containerd && echo "containerd is running" || echo "containerd is not running"
  register: containerd_status

- name: Display containerd status message
  debug:
    var: containerd_status
  